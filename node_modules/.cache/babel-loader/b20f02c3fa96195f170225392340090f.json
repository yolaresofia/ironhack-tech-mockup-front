{"ast":null,"code":"import _regeneratorRuntime from \"/Users/SOFIA/Documents/iron/todo/challenge-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/SOFIA/Documents/iron/todo/challenge-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nconst API_URL = \"http://localhost:3000/todos/\";\n\nfunction getTodo() {\n  return _getTodo.apply(this, arguments);\n}\n\nfunction _getTodo() {\n  _getTodo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$axios$get, todo;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get(\"\".concat(API_URL).concat(id));\n\n        case 2:\n          _yield$axios$get = _context.sent;\n          todo = _yield$axios$get.data;\n          return _context.abrupt(\"return\", todo);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getTodo.apply(this, arguments);\n}\n\nfunction createTodo(_x) {\n  return _createTodo.apply(this, arguments);\n}\n\nfunction _createTodo() {\n  _createTodo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(task) {\n    var _yield$axios$post, newTodo;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return axios.post(API_URL, {\n            task\n          });\n\n        case 2:\n          _yield$axios$post = _context2.sent;\n          newTodo = _yield$axios$post.data;\n          return _context2.abrupt(\"return\", newTodo);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _createTodo.apply(this, arguments);\n}\n\nfunction deleteTodo(_x2) {\n  return _deleteTodo.apply(this, arguments);\n}\n\nfunction _deleteTodo() {\n  _deleteTodo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var message;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return axios.delete(\"\".concat(API_URL).concat(id));\n\n        case 2:\n          message = _context3.sent;\n          return _context3.abrupt(\"return\", message);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _deleteTodo.apply(this, arguments);\n}\n\nfunction updateTodo(_x3, _x4) {\n  return _updateTodo.apply(this, arguments);\n}\n\nfunction _updateTodo() {\n  _updateTodo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id, payload) {\n    var _yield$axios$put, newTodo;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return axios.put(\"\".concat(API_URL).concat(id), payload);\n\n        case 2:\n          _yield$axios$put = _context4.sent;\n          newTodo = _yield$axios$put.data;\n          return _context4.abrupt(\"return\", newTodo);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _updateTodo.apply(this, arguments);\n}\n\nfunction getAllTodos() {\n  return _getAllTodos.apply(this, arguments);\n}\n\nfunction _getAllTodos() {\n  _getAllTodos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var _yield$axios$get2, todos;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return axios.get(API_URL);\n\n        case 2:\n          _yield$axios$get2 = _context5.sent;\n          todos = _yield$axios$get2.data;\n          return _context5.abrupt(\"return\", todos);\n\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _getAllTodos.apply(this, arguments);\n}\n\nexport default {\n  getTodo,\n  createTodo,\n  deleteTodo,\n  updateTodo,\n  getAllTodos\n};","map":{"version":3,"sources":["/Users/SOFIA/Documents/iron/todo/challenge-todo-app/src/APIHelper.js"],"names":["axios","API_URL","getTodo","get","id","todo","data","createTodo","task","post","newTodo","deleteTodo","delete","message","updateTodo","payload","put","getAllTodos","todos"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,8BAAhB;;SAEeC,O;;;;;sEAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAC+BF,KAAK,CAACG,GAAN,WAAaF,OAAb,SAAuBG,EAAvB,EAD/B;;AAAA;AAAA;AACgBC,UAAAA,IADhB,oBACUC,IADV;AAAA,2CAESD,IAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeE,U;;;;;yEAAf,kBAA0BC,IAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACkCR,KAAK,CAACS,IAAN,CAAWR,OAAX,EAAoB;AAClDO,YAAAA;AADkD,WAApB,CADlC;;AAAA;AAAA;AACgBE,UAAAA,OADhB,qBACUJ,IADV;AAAA,4CAISI,OAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAOeC,U;;;;;yEAAf,kBAA0BP,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACwBJ,KAAK,CAACY,MAAN,WAAgBX,OAAhB,SAA0BG,EAA1B,EADxB;;AAAA;AACQS,UAAAA,OADR;AAAA,4CAESA,OAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeC,U;;;;;yEAAf,kBAA0BV,EAA1B,EAA8BW,OAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACkCf,KAAK,CAACgB,GAAN,WAAaf,OAAb,SAAuBG,EAAvB,GAA6BW,OAA7B,CADlC;;AAAA;AAAA;AACgBL,UAAAA,OADhB,oBACUJ,IADV;AAAA,4CAESI,OAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeO,W;;;;;0EAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACgCjB,KAAK,CAACG,GAAN,CAAUF,OAAV,CADhC;;AAAA;AAAA;AACgBiB,UAAAA,KADhB,qBACUZ,IADV;AAAA,4CAESY,KAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKA,eAAe;AAAEhB,EAAAA,OAAF;AAAWK,EAAAA,UAAX;AAAuBI,EAAAA,UAAvB;AAAmCG,EAAAA,UAAnC;AAA+CG,EAAAA;AAA/C,CAAf","sourcesContent":["import axios from \"axios\"\n\nconst API_URL = \"http://localhost:3000/todos/\"\n\nasync function getTodo() {\n  const { data: todo } = await axios.get(`${API_URL}${id}`)\n  return todo\n}\n\nasync function createTodo(task) {\n  const { data: newTodo } = await axios.post(API_URL, {\n    task,\n  })\n  return newTodo\n}\n\nasync function deleteTodo(id) {\n  const message = await axios.delete(`${API_URL}${id}`)\n  return message\n}\n\nasync function updateTodo(id, payload) {\n  const { data: newTodo } = await axios.put(`${API_URL}${id}`, payload)\n  return newTodo\n}\n\nasync function getAllTodos() {\n  const { data: todos } = await axios.get(API_URL)\n  return todos\n}\n\nexport default { getTodo, createTodo, deleteTodo, updateTodo, getAllTodos }"]},"metadata":{},"sourceType":"module"}